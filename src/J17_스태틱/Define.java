package J17_스태틱;

public class Define {

	//static 정적변수, 클래스 변수, 스태틱 변수 .... 데이터 영역에 제일 먼저 저장되기때문에
	// 인스턴스 생성과는 별개이므로 인스턴스보다 먼저 생성, 그러므로 클래스 이름으로 참조 가능
	/*
	 *  클래스 메서드 내부에서 지역 변수와 클래스 변수는 사용할 수 있지만, 인스턴스 변수는 사용할 수 없다
	 *  또한 클래스 메서드에서 인스턴스 변수를 사용할 수 없지만, 반대로 일반 메서드에서 클래스 변수를 사용하는 것은 
	 *  
	 *  전혀 문제가 되지 않는다.
	 *  
	 *  왜냐하면, 일반 메서드는 인스턴스가 생성될 때 호출되는 메서드이고, 클래스 변수는 이미 만들어진 변수이기 때문에
	 *  일반 메서드에서도 클래스 변수를 호출할 수 있기 때문
	 * 
	 * 지역변수가 생성되는 메모리를 스택(stack), 
	 * 멤버변수를 인스턴스 변수 라고도 하고, 클래스가 생성될때 heap영역에 메모리를 생성
	 * 멤버변수는 클래스의 어느 메서드에서나 사용할 수 있음 (가비지 컬렉터가 메모리 해제)
	 * 클래스 내부의 여러 메서드에서 사용할 변수는 멤버변수로 선언하는 것이 좋다.
	 * 인스턴스 변수는 객체가 생성되는 new가 있어야 생성되지만, static 변수는 클래스 생성과 상관없이 처음부터 
	 * 데이터 영역에 메모리를 생성한다. 
	 * 
	 * static 변수는 프로그램 시작부터 끝까지 메모리에 상주하므로 
	 * 
	 * 너무 큰 변수를 static으로 선언하는것은 좋지않다.
	 * 
	 * 
	 * 싱클톤 패턴 ( singleton pattern ) : static을 응용하여 프로그램 전반에서 사용하는 인스턴스를 하나만 구현
	 * 하는 방식
	 * 
	 * 프레임워크(framework) 프로그램을 쉽게 개발하기 위해 구체적인 기능설계와 구현을 미리 만들어 놓은 도구
	 * 
	 * 
	 * <> 제네릭(generic) 자료형
	 */
	
}
